language: bash
git:
  depth: 1

matrix:
  include:
    - name: Windows X64
      # Set a supported language, otherwise the Windows worker will not start.
      language: shell
      os: windows
      env:
        - PLATFORM: x64
        
before_install:
  - echo $TRAVIS_OS_NAME
  # windows
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then cinst -y --no-progress python3 winflexbison strawberryperl; fi
  - |
    if [ "$TRAVIS_OS_NAME" == "windows" ]; then
      # Ensure Python and the Scripts folder is available in PATH.
      # refreshenv does not seem to work in bash, so reload it manually.
      # Entries in the Machine PATH might contain trailing slashes, drop those.
      # Apply Process paths before Machine to ensure /bin appears before others (otherwise casher will break and stall).
      export PATH="$(powershell -Command '("Process", "Machine" | % {
        [Environment]::GetEnvironmentVariable("PATH", $_) -Split ";" -Replace "\\$", ""
      } | Select -Unique | % { cygpath $_ }) -Join ":"')"
      echo "PATH=$PATH"
      # Workaround broken casher implementation that extracts absolute paths to the current working directory
      # See https://github.com/travis-ci/casher/pull/38
      for path in wireshark-libs Qt; do if [ -d "$path" ]; then echo "Restoring C:/$path"; mv "$path/"* "C:/$path"; fi; done
      # Workaround to avoid using perl from git-bash $PATH which lacks modules such as Pod::Usage
      export CMAKE_PROGRAM_PATH=C:/Strawberry/perl/bin
    fi
  - |
    curl -vLo ~/qt-unified-windows-x86-online.exe http://download.qt.io/official_releases/online_installers/qt-unified-windows-x86-online.exe
    if ! ~/qt-unified-windows-x86-online.exe --verbose --script tools/qt-installer-windows.qs > ~/qt-installer-output.txt; then
    cat ~/qt-installer-output.txt; exit 1
    fi
after_script:
  - which qmake
